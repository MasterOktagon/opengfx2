//Fields

// base index of base set sprite sets
field_ground_start = 4126;
field_fence_start = reserve_sprites(6 * 6);

//4090-4125 farm fences, replaced with an alternate offset variant for spritelayout offsets
template template_farms_fences_noxoffset(x, y, z) {
	[  35*z+x*z, 1*z+y*z, 33*z, 22*z-1, -32*z, -22*z ]
	[   1*z+x*z, 1*z+y*z, 33*z, 22*z-1, -32*z, -22*z ]
	[ 171*z+x*z, 1*z+y*z, 33*z, 30*z-1, -32*z, -30*z ]
	[ 137*z+x*z, 1*z+y*z, 33*z, 30*z-1, -32*z, -30*z ]
	[ 103*z+x*z, 1*z+y*z, 33*z, 14*z-1, -32*z, -14*z ]
	[  69*z+x*z, 1*z+y*z, 33*z, 14*z-1, -32*z, -14*z ]
}

template template_objects_farmfences(z) {
	template_farms_fences_noxoffset(0, 0, z)
	template_farms_fences_noxoffset(0, 31, z)
	template_farms_fences_noxoffset(0, 62, z)
	template_farms_fences_noxoffset(0, 93, z)
	template_farms_fences_noxoffset(0, 124, z)
	template_farms_fences_noxoffset(0, 155, z)
}
replace objects_farmfences(field_fence_start, "../graphics/terrain/64/farm_fences_8bpp.png") { template_objects_farmfences(1) }
#32 alternative_sprites(objects_farmfences, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "../graphics/terrain/64/farm_fences_bt32bpp.png") { template_objects_farmfences(1) }
#ez alternative_sprites(objects_farmfences, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "../graphics/terrain/256/farm_fences_8bpp.png") { template_objects_farmfences(4) }
#32 #ez alternative_sprites(objects_farmfences, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "../graphics/terrain/256/farm_fences_bt32bpp.png") { template_objects_farmfences(4) }

rail_fence_start = reserve_sprites(1 * 6);

//Subset of 1301-1308 rail fences, in order of farm fences with replaced offsets
template template_rail_fences_asfarm_noxoffset(x, y, z) {
	[  35*z+x*z, 1*z+y*z, 33*z, 22*z-1, -32*z, -22*z ]
    [   1*z+x*z, 1*z+y*z, 33*z, 22*z-1, -32*z, -22*z ]
	[ 240*z+x*z, 1*z+y*z, 33*z, 30*z-1, -32*z, -30*z ]
    [ 206*z+x*z, 1*z+y*z, 33*z, 30*z-1, -32*z, -30*z ]
	[ 172*z+x*z, 1*z+y*z, 33*z, 14*z-1, -32*z, -14*z ]
    [ 138*z+x*z, 1*z+y*z, 33*z, 14*z-1, -32*z, -14*z ]
}

template template_objects_railasfarmfences(z) {
    template_rail_fences_asfarm_noxoffset(0, 0, z)
}
replace objects_railasfarmfences(rail_fence_start, "../graphics/infrastructure/64/rail_fences_8bpp.png") { template_objects_railasfarmfences(1) }
#32 alternative_sprites(objects_railasfarmfences, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "../graphics/infrastructure/64/rail_fences_rm32bpp.png", "../graphics/infrastructure/64/rail_fences_8bpp.png") { template_objects_railasfarmfences(1) }
#ez alternative_sprites(objects_railasfarmfences, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "../graphics/infrastructure/256/rail_fences_8bpp.png") { template_objects_railasfarmfences(4) }
#32 #ez alternative_sprites(objects_railasfarmfences, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "../graphics/infrastructure/256/rail_fences_rm32bpp.png", "../graphics/infrastructure/256/rail_fences_8bpp.png") { template_objects_railasfarmfences(4) }

// no fence
spritelayout object_field_tiles_nofence {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
}

// fence (any number), normal slopes
spritelayout object_field_tiles_fence {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    childsprite { // NE
        sprite: LOAD_TEMP(4) + 0 + ((((LOAD_TEMP(3) >> CORNER_E) & 0x01) << 1 | ((LOAD_TEMP(3) >> CORNER_N ) & 0x01) << 2) % 3) * 2;
        always_draw: 1;
        hide_sprite: !((LOAD_TEMP(2) >> 0) & 0x01);
        xoffset: 32;
        yoffset: 16 - ((LOAD_TEMP(3) >> CORNER_E) & 0x01) * 8;
        recolour_mode: RECOLOUR_REMAP;
        palette: LOAD_TEMP(5);
    }
    childsprite { // NW
        sprite: LOAD_TEMP(4) + 1 + ((((LOAD_TEMP(3) >> CORNER_W) & 0x01) << 1 | ((LOAD_TEMP(3) >> CORNER_N) & 0x01) << 2) % 3) * 2;
        always_draw: 1;
        hide_sprite: !((LOAD_TEMP(2) >> 1) & 0x01);
        xoffset: 0;
        yoffset: 16 - ((LOAD_TEMP(3) >> CORNER_W) & 0x01) * 8;
        recolour_mode: RECOLOUR_REMAP;
        palette: LOAD_TEMP(5);
    }
    childsprite { // SE
        sprite: LOAD_TEMP(4) + 1 + ((((LOAD_TEMP(3) >> CORNER_S) & 0x01) << 1 | ((LOAD_TEMP(3) >> CORNER_E) & 0x01) << 2) % 3) * 2;
        always_draw: 1;
        hide_sprite: !((LOAD_TEMP(2) >> 2) & 0x01);
        xoffset: 32;
        yoffset: 32 - ((LOAD_TEMP(3) >> CORNER_S) & 0x01) * 8;
        recolour_mode: RECOLOUR_REMAP;
        palette: LOAD_TEMP(5);
    }
    childsprite { // SW
        sprite: LOAD_TEMP(4) + 0 + ((((LOAD_TEMP(3) >> CORNER_S) & 0x01) << 1 | ((LOAD_TEMP(3) >> CORNER_W) & 0x01) << 2) % 3) * 2;
        always_draw: 1;
        hide_sprite: !((LOAD_TEMP(2) >> 3) & 0x01);
        xoffset: 0;
        yoffset: 32 - ((LOAD_TEMP(3) >> CORNER_S) & 0x01) * 8;
        recolour_mode: RECOLOUR_REMAP;
        palette: LOAD_TEMP(5);
    }
}

// fence (any number), steep slopes
spritelayout object_field_tiles_fence_steep {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    childsprite { // NE
        sprite: LOAD_TEMP(4) + 0 + (((~LOAD_TEMP(3) >> CORNER_S | ~LOAD_TEMP(3) >> CORNER_E) & 0x01) << 0 | ((~LOAD_TEMP(3) >> CORNER_N | ~LOAD_TEMP(3) >> CORNER_W) & 0x01) << 1) * 2;
        always_draw: 1;
        hide_sprite: !((LOAD_TEMP(2) >> 0) & 0x01);
        xoffset: 32;
        yoffset: 16 - ((LOAD_TEMP(3) >> CORNER_E) & 0x01) * 8 - ((~LOAD_TEMP(3) >> CORNER_W) & 0x01) * 8;
        recolour_mode: RECOLOUR_REMAP;
        palette: LOAD_TEMP(5);
    }
    childsprite { // NW
        sprite: LOAD_TEMP(4) + 1 + (((~LOAD_TEMP(3) >> CORNER_S | ~LOAD_TEMP(3) >> CORNER_W) & 0x01) << 0 | ((~LOAD_TEMP(3) >> CORNER_N | ~LOAD_TEMP(3) >> CORNER_E) & 0x01) << 1) * 2;
        always_draw: 1;
        hide_sprite: !((LOAD_TEMP(2) >> 1) & 0x01);
        xoffset: 0;
        yoffset: 16 - ((LOAD_TEMP(3) >> CORNER_W ) & 0x01) * 8 - ((~LOAD_TEMP(3) >> CORNER_E) & 0x01) * 8;
        recolour_mode: RECOLOUR_REMAP;
        palette: LOAD_TEMP(5);
    }
    childsprite { // SE
        sprite: LOAD_TEMP(4) + 1 + (((~LOAD_TEMP(3) >> CORNER_S | ~LOAD_TEMP(3) >> CORNER_W) & 0x01) << 0 | ((~LOAD_TEMP(3) >> CORNER_N | ~LOAD_TEMP(3) >> CORNER_E) & 0x01) << 1) * 2;
        always_draw: 1;
        hide_sprite: !((LOAD_TEMP(2) >> 2) & 0x01);
        xoffset: 32;
        yoffset: 32 - ((LOAD_TEMP(3) >> CORNER_S) & 0x01) * 8 - ((~LOAD_TEMP(3) >> CORNER_N) & 0x01) * 8;
        recolour_mode: RECOLOUR_REMAP;
        palette: LOAD_TEMP(5);
    }
    childsprite { // SW
        sprite: LOAD_TEMP(4) + 0 + (((~LOAD_TEMP(3) >> CORNER_S | ~LOAD_TEMP(3) >> CORNER_E) & 0x01) << 0 | ((~LOAD_TEMP(3) >> CORNER_N | ~LOAD_TEMP(3) >> CORNER_W) & 0x01) << 1) * 2;
        always_draw: 1;
        hide_sprite: !((LOAD_TEMP(2) >> 3) & 0x01);
        xoffset: 0;
        yoffset: 32 - ((LOAD_TEMP(3) >> CORNER_S) & 0x01) * 8 - ((~LOAD_TEMP(3) >> CORNER_N) & 0x01) * 8;
        recolour_mode: RECOLOUR_REMAP;
        palette: LOAD_TEMP(5);
    }
}

// select normal vs steep slopes
switch (FEAT_OBJECTS, SELF, switch_object_fields_steep, [
    (LOAD_TEMP(3) >> IS_STEEP_SLOPE) & 0x01
]) {
    1: object_field_tiles_fence_steep;
    object_field_tiles_fence;
}

// slope index offset -> 0, _not_ identical neigbouring objects bitmask -> 2, slope bitmask -> 3
// select some vs no fences
switch (FEAT_OBJECTS, SELF, switch_object_field_slopes, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0), // slope index offset -> 0
    STORE_TEMP(tile_slope, 3), // tile slope -> 3
    STORE_TEMP((nearby_tile_object_type(-1, 0) != nearby_tile_object_type(0, 0)) << 0 | (nearby_tile_object_type(0, -1) != nearby_tile_object_type(0, 0)) << 1 | (nearby_tile_object_type(0, 1) != nearby_tile_object_type(0, 0)) << 2 | (nearby_tile_object_type(1, 0) != nearby_tile_object_type(0, 0)) << 3, 2), // _not_ identical neigbouring objects bitmask > 2
    LOAD_TEMP(2) == 0
]) {
    1: object_field_tiles_nofence;
    switch_object_fields_steep;
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_defaultproperties, [
    STORE_TEMP(0, 0), // slope index offset 0 -> 0
    STORE_TEMP(0, 3), // slope bitmask 0 -> 3
    STORE_TEMP(15, 2) // _not_ identical neighbouring objects bitmask 15 -> 2
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_properties1, [
    STORE_TEMP(field_ground_start + 19 * 0, 1),
    STORE_TEMP(field_fence_start + 6 * 0, 4),
    STORE_TEMP(RECOLOUR_NONE, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_object1, [
    procedure_object_field_properties1()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_purchase1, [
    procedure_object_field_defaultproperties(),
    procedure_object_field_properties1()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_field, 20) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_FIELD);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_field_purchase1;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_FIELD_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_field_object1;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_properties2, [
    STORE_TEMP(field_ground_start + 19 * 1, 1),
    STORE_TEMP(field_fence_start + 6 * 2, 4),
    STORE_TEMP(RECOLOUR_NONE, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_object2, [
    procedure_object_field_properties2()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_purchase2, [
    procedure_object_field_defaultproperties(),
    procedure_object_field_properties2()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_field2, 21) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_FIELD);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_field_purchase2;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_FIELD_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_field_object2;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_properties3, [
    STORE_TEMP(field_ground_start + 19 * 2, 1),
    STORE_TEMP(field_fence_start + 6 * 3, 4),
    STORE_TEMP(RECOLOUR_NONE, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_object3, [
    procedure_object_field_properties3()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_purchase3, [
    procedure_object_field_defaultproperties(),
    procedure_object_field_properties3()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_field3, 22) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_FIELD);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_field_purchase3;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_FIELD_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_field_object3;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_properties4, [
    STORE_TEMP(field_ground_start + 19 * 3, 1),
    STORE_TEMP(field_fence_start + 6 * 4, 4),
    STORE_TEMP(RECOLOUR_NONE, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_object4, [
    procedure_object_field_properties4()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_purchase4, [
    procedure_object_field_defaultproperties(),
    procedure_object_field_properties4()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_field4, 23) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_FIELD);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_field_purchase4;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_FIELD_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_field_object4;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_properties5, [
    STORE_TEMP(field_ground_start + 19 * 4, 1),
    STORE_TEMP(field_fence_start + 6 * 5, 4),
    STORE_TEMP(RECOLOUR_NONE, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_object5, [
    procedure_object_field_properties5()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_purchase5, [
    procedure_object_field_defaultproperties(),
    procedure_object_field_properties5()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_field5, 24) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_FIELD);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_field_purchase5;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_FIELD_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_field_object5;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_properties6, [
    STORE_TEMP(field_ground_start + 19 * 5, 1),
    STORE_TEMP(field_fence_start + 6 * 0, 4),
    STORE_TEMP(RECOLOUR_NONE, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_object6, [
    procedure_object_field_properties6()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_purchase6, [
    procedure_object_field_defaultproperties(),
    procedure_object_field_properties6()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_field6, 25) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_FIELD);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_field_purchase6;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_FIELD_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_field_object6;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_properties7, [
    STORE_TEMP(field_ground_start + 19 * 6, 1),
    STORE_TEMP(field_fence_start + 6 * 2, 4),
    STORE_TEMP(RECOLOUR_NONE, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_object7, [
    procedure_object_field_properties7()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_purchase7, [
    procedure_object_field_defaultproperties(),
    procedure_object_field_properties7()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_field7, 26) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_FIELD);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_field_purchase7;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_FIELD_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_field_object7;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_properties8, [
    STORE_TEMP(field_ground_start + 19 * 7, 1),
    STORE_TEMP(field_fence_start + 6 * 3, 4),
    STORE_TEMP(RECOLOUR_NONE, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_object8, [
    procedure_object_field_properties8()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_purchase8, [
    procedure_object_field_defaultproperties(),
    procedure_object_field_properties8()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_field8, 27) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_FIELD);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_field_purchase8;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_FIELD_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_field_object8;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_field_properties9, [
    STORE_TEMP(field_ground_start + 19 * 8, 1),
    STORE_TEMP(field_fence_start + 6 * 4, 4),
    STORE_TEMP(RECOLOUR_NONE, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_object9, [
    procedure_object_field_properties9()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_field_purchase9, [
    procedure_object_field_defaultproperties(),
    procedure_object_field_properties9()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_field9, 28) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_FIELD);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_field_purchase9;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_FIELD_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_field_object9;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_companytile_properties1, [
    STORE_TEMP(GROUNDSPRITE_CLEARED + 19 * 0, 1),
    STORE_TEMP(rail_fence_start, 4),
    STORE_TEMP(PALETTE_USE_DEFAULT, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_companytile_object1, [
    procedure_object_companytile_properties1()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_companytile_purchase1, [
    procedure_object_field_defaultproperties(),
    procedure_object_companytile_properties1()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_tile_companytile, 30) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_COMPANY_BARE);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_companytile_purchase1;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_COMPANY_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_companytile_object1;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_companytile_properties2, [
    STORE_TEMP(GROUNDSPRITE_CLEARED + 19 * 1, 1),
    STORE_TEMP(rail_fence_start, 4),
    STORE_TEMP(PALETTE_USE_DEFAULT, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_companytile_object2, [
    procedure_object_companytile_properties2()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_companytile_purchase2, [
    procedure_object_field_defaultproperties(),
    procedure_object_companytile_properties2()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_tile_companytile2, 31) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_COMPANY_PART1);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_companytile_purchase2;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_COMPANY_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_companytile_object2;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_companytile_properties3, [
    STORE_TEMP(GROUNDSPRITE_CLEARED + 19 * 2, 1),
    STORE_TEMP(rail_fence_start, 4),
    STORE_TEMP(PALETTE_USE_DEFAULT, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_companytile_object3, [
    procedure_object_companytile_properties3()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_companytile_purchase3, [
    procedure_object_field_defaultproperties(),
    procedure_object_companytile_properties3()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_tile_companytile3, 32) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_COMPANY_PART2);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_companytile_purchase3;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_COMPANY_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_companytile_object3;
    }
}

switch (FEAT_OBJECTS, SELF, procedure_object_companytile_properties4, [
    STORE_TEMP(GROUNDSPRITE_CLEARED + 19 * 3, 1),
    STORE_TEMP(rail_fence_start, 4),
    STORE_TEMP(PALETTE_USE_DEFAULT, 5)
]) {
    0;
}

switch (FEAT_OBJECTS, SELF, switch_object_companytile_object4, [
    procedure_object_companytile_properties4()
]) {
    switch_object_field_slopes;
}

switch (FEAT_OBJECTS, SELF, switch_object_companytile_purchase4, [
    procedure_object_field_defaultproperties(),
    procedure_object_companytile_properties4()
]) {
    object_field_tiles_fence;
}

item (FEAT_OBJECTS, object_tile_companytile4, 33) {
    property {
        class: "FLD_";
        classname: string(STR_CLASS_FLD_);
        name: string(STR_OBJECT_COMPANY_GRASS);
        climates_available: ALL_CLIMATES;
        size: [1, 1];
        build_cost_multiplier: 3;
        remove_cost_multiplier: 3;
        introduction_date: 0x00000000;
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 1;
    }
    graphics {
        purchase: switch_object_companytile_purchase4;
        autoslope: return(CB_RESULT_AUTOSLOPE);
        additional_text: string(STR_OBJECT_COMPANY_BUY);
        tile_check: CB_RESULT_LOCATION_ALLOW;
        default: switch_object_companytile_object4;
    }
}
